From 0d410669911142186a0f2028fe953a01b08664a4 Mon Sep 17 00:00:00 2001
From: Condor3397 <freedomcondor@126.com>
Date: Fri, 9 Nov 2018 15:59:33 +0100
Subject: [PATCH] version 2.3, enterMethod return 1

---
 StateMachine.lua | 14 ++++++++++++--
 main.lua         |  5 +++--
 2 files changed, 15 insertions(+), 4 deletions(-)

diff --git a/StateMachine.lua b/StateMachine.lua
index fc54962..cdb540a 100644
--- a/StateMachine.lua
+++ b/StateMachine.lua
@@ -5,6 +5,9 @@
 -- 		-- added: method can access: father data,  self data, step para
 -- version 2.2
 -- 		-- added: CLASSSTATEMACHINE = true
+-- version 2.3
+-- 		-- added: enterMethod return 1 for jumping a step for transMethod check
+-- 		-- changed: in step(), if no substates, return -1 instead of 1
 ------------------------------------------------------
 function tableCopy(x)
 	local image = {}
@@ -92,10 +95,11 @@ function StateMachine:step(para)
 -- return 1 means ongoing, return -1 means finish
 	-- if I don't have substate, joking, return -1
 	if self.substates == nil then
-		return 1
+		return -1
 	end
 
 	-- check nextState
+	-- self.nextState is the cue, if nil means the State stays, skip enterMethod
 	if self.nextState ~= nil then
 		if self.nextState == "EXIT" then
 			self.nextState = nil
@@ -106,7 +110,13 @@ function StateMachine:step(para)
 			self.currentState = self.substates[self.nextState]
 			self.currentState:init()
 			if self.currentState.enterMethod ~= nil then
-				self.currentState.enterMethod(self.data, self.currentState.data, para)
+				local retEnter = nil
+				retEnter = self.currentState.enterMethod(self.data, self.currentState.data, para)
+				-- if enterMethod return 1, means jump to next step for transMethod
+				if retEnter == 1 then	
+					self.nextState = nil
+					return 1
+				end
 			end
 		end
 	end
diff --git a/main.lua b/main.lua
index f0e4aa6..d2e06cf 100644
--- a/main.lua
+++ b/main.lua
@@ -12,6 +12,7 @@ local a = State:new{
 			enterMethod = function(data)
 				data.i = 5
 				print("i am enter Method of a")
+				return 1	-- jump to next step for trans
 			end,
 			transMethod = function(data)
 				data.i = data.i - 1
@@ -75,8 +76,8 @@ local a = State:new{
 			end,
 			transMethod = function()
 				print("i am trans Method of c")
-				--return "EXIT"
-				return "a"
+				return "EXIT"
+				--return "a"
 			end,
 			leaveMethod = function()
 				print("i am leave Method of c")
-- 
2.17.1

